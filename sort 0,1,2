###SORT BY 0,1,2  ( LEETCODE )
Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]

##BRUTE FORCE 

we can use any sorting algorithms 

## better soln 

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int n=nums.size();
        int cnt1=0,cnt2=0,cnt3=0;
        for(int i=0;i<n;i++){
            if(nums[i]==0)
            cnt1++;
            else if(nums[i]==1)
            cnt2++;
            else 
            cnt3++;
        }
        for(int i=0;i<cnt1;i++){
            nums[i]=0;
        }
        for(int i=cnt1;i<cnt1+cnt2;i++){
            nums[i]=1;
        }
        for(int i=cnt1+cnt2;i<n;i++){
            nums[i]=2;
        }
    }
};


## OPTIMAL CODE 


//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;



// } Driver Code Ends
class Solution
{
    public:
    void sort012(int a[], int n)
    {
        int low=0;
        int mid=0;
        int high=n-1;
        while(mid<=high){
            if(a[mid]==0){
                swap(a[low],a[mid]);
                low++;
                mid++;
            }
            else if(a[mid]==1){
                mid++;
            }
            else{
                swap(a[mid],a[high]);
                high--;
            }
        }
    }
};


//{ Driver Code Starts.
int main() {

    int t;
    cin >> t;

    while(t--){
        int n;
        cin >>n;
        int a[n];
        for(int i=0;i<n;i++){
            cin >> a[i];
        }

        Solution ob;
        ob.sort012(a, n);

        for(int i=0;i<n;i++){
            cout << a[i]  << " ";
        }

        cout << endl;
        
        
    }
    return 0;
}


// } Driver Code Ends
